/*
 * styles.scss
 * 
 * Copyright (c) 2019, not_a_seagull
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// imports from google fonts
@import url('https://fonts.googleapis.com/css?family=Atomic+Age|Courier+Prime&display=swap');

// font variables
$atomic-age: 'Atomic Age', sans-serif;
$courier-prime: 'Courier Prime', serif;

// color variables
$datapad-border: #70706F;
$retro-green: #3bff22;

.atomic-age {
  font-family: $atomic-age;
  font-weight: bold;
}

.courier-prime {
  font-family: $courier-prime;
  font-weight: bold;
}

// utilities
%width-100 {
  width: 100%;
}

%shadow {
  box-shadow: 0 3px 5px #000,0 3px 9px rgba(0,0,0,.5);
}

@mixin hyphens($type) {
  -webkit-hyphens: $type;
  -ms-hyphens: $type;
  hyphens: $type;
}

// loaded file indicator
.load-file-indicator {
  width: 96%;

  tr {
    @extend %width-100;
   
    td {
      margin: 2px 3px;
      font-size: 125%;
    }

    td:not(.textbox) {
      @extend .atomic-age;
      padding-left: 30px;
    }

    td.textbox {
      @extend .courier-prime;
      width: 75%;
      background-color: black;
      color: $retro-green;
      padding: 0 10px;
      padding-top: 2px;
      margin-right: 10px;
      border: 2px solid $datapad-border;
      overflow: hidden;
    }
  }
}

$scroll-area-height: 500px;

// datapad
#datapad {
  background-image: linear-gradient(to left top, #7D7D7A, #8E8D8D, #A1A2A3, #B3B6B5, #BEC0C2);
  border: 3px solid black;
  border-radius: 19.2px;
  
  p#datapad-label-top {
    @extend .atomic-age;
    text-align: center;
  }

  p#datapad-label {
    @extend .atomic-age;
    font-size: 250%;
    text-align: center;
    margin-top: -8px;
    margin-bottom: 2px;
  }

  div#datapad-scroll-area {
    border: 2px solid $datapad-border;
    overflow-x: hidden;

    height: $scroll-area-height;
    margin: 25px;

    overflow-y: scroll;
    padding: 10px;
    padding-top: 0px;

    div#scroll-area-scanlines {
      @extend .scanlines;
      z-index: 10;

      height: $scroll-area-height;
      width: 100%;

      position: absolute;
    }
  }

  table#datapad-pager {
    @extend %width-100;
    margin-bottom: 20px;
  }
}

// scp header
$foundation-table-border: 3px solid black;

table.foundation-header {
  border: $foundation-table-border;
  border-collapse: collapse;

  tr {
    border: $foundation-table-border;

    td {
      border: $foundation-table-border;
    }

    td.foundation-name {
      font-family: BauhausLTDemi, 'Nanum Gothic', Arial, sans-serif;
      color: #f4f4f4;
      font-size: 280%;
      letter-spacing: 0.9px;
      background-color: #ffc7c7;

      padding-left: 1rem;
    }

    td.foundation-motto {
      max-height: 0px;
      font-weight: bold;
      color: #a2a26c;
      background-color: #f9f9f9;
      padding-left: 1rem;
    }

    td.foundation-shield {
      text-align: center;

      img {
        width: 100px;
      }
    }
  }
}

.below-foundation-header {
  margin-top: -19px;
  padding: 8px;
  border: $foundation-table-border;
}

// put border around stuff
p.blabel {
  text-align: center;

  tt {
    border: 2px solid black;
    padding: 1px 5px;
  }
}

// classes
.retro {
  @extend .courier-prime;
  background-color: black;
  color: $retro-green;

  font-size: 150%;
}

.standard {
  background-color: white;
  font-size: 125%;
  color: black;
}

/* Scanline code taken from https://codepen.io/meduzen/pen/zxbwRV */
// width of 1 scanline (min.: 1px)
$scan-width: 1px;

// emulates a damage-your-eyes bad pre-2000 CRT screen ♥ (true, false)
$scan-crt: false;

// frames-per-second (should be > 1), only applies if $scan-crt: true;
$scan-fps: 60;

// scanline-color (rgba)
$scan-color: rgba(#000, .2);

// set z-index on 8, like in ♥ 8-bits ♥, or…
// set z-index on 2147483648 or more to enable scanlines on Chrome fullscreen (doesn't work in Firefox or IE);
$scan-z-index: 2147483648;

/* MOVING SCANLINE SETTINGS */

// moving scanline (true, false)
$scan-moving-line: true;

// opacity of the moving scanline
$scan-opacity: .75;

/* MIXINS */

// apply CRT animation: @include scan-crt($scan-crt);
@mixin scan-crt($scan-crt) {
  @if $scan-crt == true {
    animation: scanlines 1s steps($scan-fps) infinite;
  }
  @else { animation: none; }
}

// apply CRT animation: @include scan-crt($scan-crt);
@mixin scan-moving($scan-moving-line) {
  @if $scan-moving-line == true {
    animation: scanline 6s linear infinite;
  }
  @else { animation: none; }
}

/* CSS .scanlines CLASS */

.scanlines {
  overflow: hidden;

  &:before,
  &:after {
    display: block;
    pointer-events: none;
    content: '';
    position: absolute;
  }

  // unique scanline travelling on the screen
  &:before {
    // position: absolute;
    // bottom: 100%;
    width: 100%;
    height: $scan-width * 1;
    z-index: $scan-z-index + 1;
    background: $scan-color;
    opacity: $scan-opacity;
    // animation: scanline 6s linear infinite;
    @include scan-moving($scan-moving-line);
  }

  // the scanlines, so!
  &:after {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: $scan-z-index;
    background: linear-gradient(
	to bottom,
	transparent 50%,
	$scan-color 51%
    );
    background-size: 100% $scan-width*2;
    @include scan-crt($scan-crt);
  }
}

/* ANIMATE UNIQUE SCANLINE */
@keyframes scanline {
    0% {
        transform: translate3d(0,200000%,0);
        // bottom: 0%; to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
    }
}

@keyframes scanlines {
    0% {
        background-position: 0 50%;
        // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
    }
}
